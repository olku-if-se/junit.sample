plugins {
    id 'java'
    id 'jacoco'
}

if (hasProperty('buildScan')) {
    buildScan {
        termsOfServiceUrl = 'https://gradle.com/terms-of-service'
        termsOfServiceAgree = 'yes'
    }
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.13.2')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    // For JUnit 4 compatibility
    testImplementation("junit:junit:4.13.2")
    testRuntimeOnly("org.junit.vintage:junit-vintage-engine")
    testRuntimeOnly("org.junit.platform:junit-platform-launcher")

    // Mocks, https://site.mockito.org/
    testImplementation "org.mockito:mockito-core:5.+"
}

test {
    useJUnitPlatform()
    testLogging {
        events("passed", "skipped", "failed")
    }
    jacoco {
        enabled = true
        includes = ['**/*']
    }
    finalizedBy(jacocoTestReport)
}

jacocoTestReport {
    dependsOn test // Ensure tests are run before generating the report

    reports {
        xml.required = !project.hasProperty("NoReports")
        csv.required = !project.hasProperty("NoReports")
        html.required = !project.hasProperty("NoReports")
    }
}

tasks.withType(Test).configureEach {
    if (project.hasProperty("NoReports")) {
        reports.junitXml.required = false
        reports.html.required = false
    }
}